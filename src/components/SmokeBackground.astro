<div id="smoke-bg" class="fixed top-0 h-full w-full -z-10"></div>

<script>
  import * as THREE from 'three';

  const $bkg = document.getElementById('smoke-bg');

  let w = window.innerWidth;
  let h = window.innerHeight;

  // Inicializar Three.js

  const scene = new THREE.Scene();

  const camera = new THREE.PerspectiveCamera(75, w / h, 1, 1000);
  camera.position.z = 10;

  scene.add(camera);

  const renderer = new THREE.WebGLRenderer();
  renderer.setSize(w, h);
  renderer.setClearColor(0x555555, 1);

  $bkg?.appendChild(renderer.domElement);

  const light = new THREE.DirectionalLight(0xffffff, 0.5);
  light.position.set(10, -7, 1);
  scene.add(light);

  const smokeParticles: THREE.Mesh[] = [];

  const loader = new THREE.TextureLoader();
  loader.crossOrigin = '';

  loader.load('/effects/smoke.webp', (texture) => {
    const smokeGeo = new THREE.PlaneGeometry(300, 300);

    const smokeMaterial = new THREE.MeshLambertMaterial({
      map: texture,
      transparent: true,
    });

    const NUM_OF_PARTICLES = 300;
    for (let p = 0; p < NUM_OF_PARTICLES; p++) {
      const particle = new THREE.Mesh(smokeGeo, smokeMaterial);

      particle.position.set(
        Math.random() * 500 - 250, // x
        Math.random() * 500 - 250, // y
        Math.random() * 1000 - 100 // z
      );
      particle.rotation.z = Math.random() * 360;

      scene.add(particle);

      smokeParticles.push(particle);
    }
  });

  function resize() {
    h = window.innerHeight;
    w = window.innerWidth;
    camera.aspect = w / h;
    camera.updateProjectionMatrix();
    renderer.setSize(w, h);
  }

  function animateSmoke() {
    requestAnimationFrame(animateSmoke);

    smokeParticles.forEach((p) => {
      p.rotation.z += 0.0005;
    });

    renderer.render(scene, camera);
  }
  animateSmoke();

  window.addEventListener('resize', resize);
</script>
